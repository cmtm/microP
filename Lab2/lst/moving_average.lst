


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 EXPORT           moving_average_s
    3 00000000         
    4 00000000         ; d is the filter depth
    5 00000000         ; it exists independantly in two other places.
    6 00000000         ; if changing this one, don't forget to change the other
                        two
    7 00000000         ; one is as a #define in main.c
    8 00000000         ; the other is as a float literal at the bottom of this 
                       file
    9 00000000 0000000A 
                       d       EQU              10
   10 00000000         
   11 00000000         ; State Struct
   12 00000000         ; one word for "tail"
   13 00000000         ; d words for circular buffer
   14 00000000         ; one word for "accumulated"
   15 00000000         ; one word for "yPrevious"
   16 00000000         
   17 00000000         
   18 00000000         
   19 00000000         ; relative addresses
   20 00000000 00000000 
                       circBuf EQU              (0)   * 4
   21 00000000 00000028 
                       tail    EQU              (d)   * 4
   22 00000000 0000002C 
                       yPrevious
                               EQU              (d+1) * 4
   23 00000000         
   24 00000000         
   25 00000000         ; function where the moving average is actually computed
                       
   26 00000000         ; pointer to state struct is in r0
   27 00000000         ; new sample value is in s0
   28 00000000         moving_average_s
   29 00000000         ; fetch yPrevious
   30 00000000 EDD0 0A0B       VLDR.32          s1, [r0, #yPrevious]
   31 00000004         ; fetch tail pointer
   32 00000004 6A82            LDR              r2, [r0, #tail]
   33 00000006         ; fetch tail value
   34 00000006 EB00 0102       ADD              r1, r0, r2
   35 0000000A ED91 1A00       VLDR.32          s2, [r1]
   36 0000000E         ; store new sample at tail pointer
   37 0000000E ED81 0A00       VSTR.32          s0, [r1]
   38 00000012         ; compute y New
   39 00000012 EE30 0A20       VADD.F32         s0, s0, s1
   40 00000016 EE30 0A41       VSUB.F32         s0, s0, s2
   41 0000001A         ; move tail pointer
   42 0000001A 1F12            SUBS             r2, r2, #4
   43 0000001C         ; gotta loop it around if needed
   44 0000001C D501            BPL              labelB
   45 0000001E F102 0228       ADD              r2, r2, #(d*4)
   46 00000022         labelB
   47 00000022         ; store computed y as yPrevious
   48 00000022 ED80 0A0B       VSTR.32          s0, [r0, #yPrevious]
   49 00000026         ; store new tail pointer
   50 00000026 6282            STR              r2, [r0, #tail]
   51 00000028         ; Here, I just divided by d to save some steps.



ARM Macro Assembler    Page 2 


   52 00000028         ; it'll only sqew a few values at the beginning.
   53 00000028         ; I have a previous revision of using another
   54 00000028         ; variable called accum which counted to d but
   55 00000028         ; it was a lot of extra computation for no return
   56 00000028 EEF2 0A04       VMOV.F32         s1, #10.0
   57 0000002C EE80 0A20       VDIV.F32         s0, s0, s1
   58 00000030 4770            BX               LR
   59 00000032                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
\moving_average.d -o.\obj\moving_average.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM
\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F4xx --predefine="__EVAL SETA 1" --lis
t=.\lst\moving_average.lst src\moving_average.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

labelB 00000022

Symbol: labelB
   Definitions
      At line 46 in file src\moving_average.s
   Uses
      At line 44 in file src\moving_average.s
Comment: labelB used once
moving_average_s 00000000

Symbol: moving_average_s
   Definitions
      At line 28 in file src\moving_average.s
   Uses
      At line 2 in file src\moving_average.s
Comment: moving_average_s used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file src\moving_average.s
   Uses
      None
Comment: text unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

circBuf 00000000

Symbol: circBuf
   Definitions
      At line 20 in file src\moving_average.s
   Uses
      None
Comment: circBuf unused
d 0000000A

Symbol: d
   Definitions
      At line 9 in file src\moving_average.s
   Uses
      At line 21 in file src\moving_average.s
      At line 22 in file src\moving_average.s
      At line 45 in file src\moving_average.s

tail 00000028

Symbol: tail
   Definitions
      At line 21 in file src\moving_average.s
   Uses
      At line 32 in file src\moving_average.s
      At line 50 in file src\moving_average.s

yPrevious 0000002C

Symbol: yPrevious
   Definitions
      At line 22 in file src\moving_average.s
   Uses
      At line 30 in file src\moving_average.s
      At line 48 in file src\moving_average.s

4 symbols
339 symbols in table
